# Plone LDAP Analysis
# ===================
#
# Buildout for analyzing the user and group data in the plone.org
# directory service.
 
[buildout]
extensions = buildout.bootstrap
parts =
    var
    slapd
    ldap
    load
    supervisor
    ldapsearch
    python

# Paths
# -----
#
# Edit these to match your systemm.
[paths]
slapd = /usr/libexec/slapd
export-file = ${buildout:directory}/dc=plone,dc=org.ldif.bz2
core-schema = /etc/openldap/schema/core.schema
cosine-schema = /etc/openldap/schema/cosine.schema
slapadd = /usr/sbin/slapadd
ldapsearch = /usr/bin/ldapsearch

# Ports
# -----
#
# Yes, I'd love to use ldapi (Unix IPC) but can't get it to work with
# fsck'n slapd on Lion. So, you're stuck with TCP/IP to localhost.
#
# Anyway, change this port if it's already in use on your system.
[ports]
slapd = 9389


# End of Configuration
# --------------------
#
# Nothing else below here should need configuration.  The rest of this
# is to actually build out the buildout.


# var
# ~~~
#
# Make the var and var/db directories.  var/db holds the slapd database.
[var]
recipe = z3c.recipe.mkdir
paths = var/db

# slapd
# ~~~~~
#
# Make a slapd configuration file so we can run a simple, standalone slapd
# server for plone.org.
[slapd]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/slapd.conf
output = ${buildout:parts-directory}/slapd/slapd.conf

# ldap
# ~~~~
#
# Make an ldap configuration file that all set up to query out simple slapd.
[ldap]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/ldap.conf
output = ${buildout:parts-directory}/ldap/ldap.conf

# load
# ~~~~
#
# Load our slapd server with the plone.org directory dump.
[load]
recipe = collective.recipe.cmd
on_install = true
on_update = false
uninstall_cmds = /bin/rm -f ${buildout:directory}/var/db/*
cmds =
    /usr/bin/bzip2 -dc ${paths:export-file} | ${paths:slapadd} -cqvb dc=plone,dc=org -f ${slapd:output}

# supervisor
# ~~~~~~~~~~
#
# Fire up a supervisord to run our simple slapd server.
[supervisor]
recipe = collective.recipe.supervisor
http-socket = unix
file = ${buildout:directory}/var/supervisor.socket
user = supervisor
password = s3cr3t
programs =
    10 slapd ${paths:slapd} [-h "ldap://localhost:${ports:slapd}" -f "${slapd:output}" -d 7] ${buildout:directory}/var true

# ldapsearch
# ~~~~~~~~~~
#
# Make a wrapper around the ``ldapsearch`` command so it automatically uses
# our ``ldap.conf`` file created in the "ldap" part.
[ldapsearch]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/ldapsearch
output = ${buildout:bin-directory}/ldapsearch
dollar = $
mode = 755

# python
# ~~~~~~
#
# Build a python interpreter with python-ldap baked right in.
[python]
recipe = zc.recipe.egg
interpreter = python
eggs = python-ldap==2.3.13

